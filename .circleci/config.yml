version: 2
jobs:
  test:
    working_directory: ~/kuali-logger
    docker:
      - image: circleci/node:6
      - image: notnoopci/php:7.1.5-browsers
    steps:
      - checkout
      - restore_cache:
          key: v1-dependency-cache-{{ checksum "yarn.lock" }}
      - run: sudo pecl channel-update pecl.php.net
      - run: sudo pecl install xdebug && sudo docker-php-ext-enable xdebug
      - run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      - run: chmod +x ./cc-test-reporter
      - run: sudo mkdir -p $CIRCLE_TEST_REPORTS/phpunit
      - run: ./cc-test-reporter before-build
      - run: sudo vendor/bin/phpunit --coverage-clover clover.xml
      - run: ./cc-test-reporter after-build -t clover --exit-code $?
      - run:
          name: Configure private package registry
          command: |
            echo "//npm.kuali.co/:_authToken=\"$NPM_TOKEN\"" > .npmrc
            npm config set @kuali:registry='https://npm.kuali.co'
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: v1-dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Run tests
          command: yarn test
      - run:
          name: Publish code coverage results
          command: yarn coverage:publish
      - store_artifacts:
          path: coverage
          destination: coverage
      - run: ./cc-test-reporter format-coverage -t lcov $CIRCLE_ARTIFACTS/coverage/.resultset.json
      - run: ./cc-test-reporter upload-coverage
  deploy:
    working_directory: ~/kuali-logger
    docker:
      - image: circleci/node:6
    steps:
      - checkout
      - run:
          name: Remove unneeded files
          command: |
            rm -rfv .circleci
            rm .bithoundrc
            rm .nvmrc
            rm .eslintrc
            rm .gitignore
            rm -rfv test
      - run:
          name: Configure public package registry
          command: |
            echo "//registry.npmjs.org/:_authToken=\"$PUBLIC_NPM_TOKEN\"" > .npmrc
      - run:
          name: Publish to npm
          command: npm publish
workflows:
  version: 2
  test_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
